MONGO_URL=mongodb+srv://airbnbuser:airbnbpw@cluster1airbnb.f0mea.mongodb.net/?retryWrites=true&w=majority&appName=Cluster1airbnb

PORT=9000


import React, { useState, useRef, useEffect } from "react";
import './Hire.css';
import { User, CarFront } from "lucide-react";
import { Link } from "react-router-dom";
import config from '../../config';

const Hire = () => {
  const [nicInput, setNicInput] = useState('');
  const [suggestions, setSuggestions] = useState([]);
  const [customerData, setCustomerData] = useState({
    cusId: '',
    nic: '',
    license: '',
    cusName: '',
    cusAddress: '',
    cusPhone: ''
  });
  const [showSuggestions, setShowSuggestions] = useState(false);
  const suggestionsRef = useRef(null);

  // Handle click outside suggestions
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (suggestionsRef.current && !suggestionsRef.current.contains(event.target)) {
        setShowSuggestions(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  // Fetch suggestions as user types
  const fetchSuggestions = async (query) => {
    if (query.length < 2) {
      setSuggestions([]);
      setShowSuggestions(false);
      return;
    }

    try {
      const response = await fetch(`${config.BASE_URL}/customer/nic-suggestions/${query}`);
      const data = await response.json();
      
      if (response.ok) {
        setSuggestions(data);
        setShowSuggestions(true);
      }
    } catch (error) {
      console.error('Error fetching suggestions:', error);
    }
  };

  // Select a customer from suggestions
  const handleSelectCustomer = (customer) => {
    setCustomerData({
      cusId: customer.cusId,
      nic: customer.nic,
      license: customer.license || '',
      cusName: customer.cusName || '',
      cusAddress: customer.cusAddress || '',
      cusPhone: customer.cusPhone || ''
    });
    setNicInput(customer.nic);
    setShowSuggestions(false);
  };

  // Handle NIC input change
  const handleNicInputChange = (e) => {
    const value = e.target.value;
    setNicInput(value);
    fetchSuggestions(value);
  };

  return (
    <div className="container-fluid p-5">
      <div className="row">
        <div className="col-md-4 border-end">
          <div className="d-flex justify-content-between align-items-center mb-2">
            <h5 className="d-flex align-items-center">
              <User className="me-2" /> Customer Details
            </h5>
            <Link to="/customer/customer-list">
              <button className="btn btn-success btn-sm">Create Customer</button>
            </Link>
          </div>
          
          {/* NIC input with suggestions */}
          <div className="position-relative" ref={suggestionsRef}>
            <input
              type="text"
              className="form-control mb-2"
              placeholder="Customer NIC"
              value={nicInput}
              onChange={handleNicInputChange}
            />
            
            {/* Suggestions dropdown */}
            {showSuggestions && suggestions.length > 0 && (
              <div className="position-absolute w-100 bg-white shadow border rounded mt-1" 
                   style={{ zIndex: 1000, maxHeight: '200px', overflowY: 'auto' }}>
                {suggestions.map((customer) => (
                  <div
                    key={customer.cusId}
                    className="p-2 cursor-pointer hover-bg-light border-bottom"
                    onClick={() => handleSelectCustomer(customer)}
                    style={{ cursor: 'pointer' }}
                  >
                    <div className="fw-bold">{customer.nic}</div>
                    <div className="small text-muted">{customer.cusName}</div>
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* Other customer fields */}
          <input
            type="text"
            className="form-control mb-2  bg-light"
            placeholder="Customer Licence"
            value={customerData.license}
            readOnly
          />
          <input
            type="text"
            className="form-control mb-2  bg-light"
            placeholder="Customer Name"
            value={customerData.cusName}
            readOnly
          />
          <input
            type="text"
            className="form-control mb-2  bg-light bg-light"
            placeholder="Customer Address"
            value={customerData.cusAddress}
            readOnly
          />
          <input
            type="text"
            className="form-control mb-2  bg-light"
            placeholder="Customer Phone"
            value={customerData.cusPhone}
            readOnly
          />
        </div>

    {/* Guarantor Details */}
    <div className="col-md-4 border-end">
      {/* <h5>Guarantor Details</h5> */}
 

        <div className="d-flex justify-content-between align-items-center mb-2">
        <h5 className="d-flex align-items-center">
        <i className="bi bi-person-raised-hand me-2" style={{ fontSize: '20px' }}></i>  Guarantor Details
        </h5>
        <Link to="/gurantor">
          <button className="btn btn-success btn-sm">Create Guarantor</button>
        </Link>
      </div>


      <input type="text" className="form-control mb-2" placeholder="Guarantor NIC" />
      <input type="text" className="form-control mb-2" placeholder="Guarantor Name" />
      <input type="text" className="form-control mb-2" placeholder="Guarantor Phone" />
      <input type="text" className="form-control mb-2" placeholder="Guarantor Address" />
    </div>

    {/* Vehicle Details */}
    <div className="col-md-4">
      <div className="d-flex justify-content-between align-items-center mb-2">
        <h5 className="d-flex align-items-center">
          <CarFront className="me-2" /> Vehicle Details
        </h5>
        <Link to="/product/product-list">
          <button className="btn btn-success btn-sm">Create Product</button>
        </Link>
      </div>
      <input type="text" className="form-control mb-2" placeholder="Vehicle Name" />
      <input type="text" className="form-control mb-2" placeholder="Number Plate" />
      <input type="text" className="form-control mb-2" placeholder="Hire Price" />
    </div>
  </div>


      
  <div className="d-flex justify-content-end">
  <button className="btn btn-primary mt-3">Add</button>
</div>

      
      {/* Table */}
      <div className="table-responsive mt-3">
        <table className="table table-bordered">
          <thead>
            <tr>
              <th>Customer Name</th>
              <th>Customer NIC</th>
              <th>Vehicle Name</th>
              <th>Number Plate</th>
              <th>Hire Price</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>John Doe</td>
              <td>123456789</td>
              <td>Toyota Corolla</td>
              <td>ABC-123</td>
              <td>$100/day</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      {/* Payment Section */}
      <div className="row mt-3">
        <div className="col-md-6">
          <label>Cashier</label>
          <input type="text" className="form-control mb-2" placeholder="Cashier Name" />
        </div>
        <div className="col-md-6">
          <label>Today's Date</label>
          <input type="text" className="form-control mb-2" value={new Date().toLocaleString()} readOnly />
        </div>
      </div>
      
      <div className="row mt-3">
        <div className="col-md-6">
          <label>Payable Amount</label>
          <input type="text" className="form-control mb-2" placeholder="Payable Amount" />
          <button className="btn btn-success me-2">Cash</button>
          <button className="btn btn-warning me-2">Pay Later</button>
          <button className="btn btn-info me-2">Online Payment</button>
        </div>
        <div className="col-md-6">
          <label>Total Amount</label>
          <input type="text" className="form-control mb-2" placeholder="Total Amount" />
          <label>Paid Amount</label>
          <input type="text" className="form-control mb-2" placeholder="Paid Amount" />
          <label>Note</label>
          <textarea className="form-control mb-2" placeholder="Note"></textarea>
        </div>
      </div>
      
      <div className="mt-3">
        <button className="btn btn-danger me-2">Cancel</button>
        <button className="btn btn-primary">Create</button>
      </div>
    </div>
  );
};

export default Hire;
